@page "/atadasok"

@using Blazorise.Components
@using raktarProgram.Data
@using raktarProgram.Data.Filters
@using raktarProgram.Interfaces
@using Blazorise.DataGrid
@using System.Transactions


@inject IHomeRespitory repo
@inject SearchService searchService

<h3>Elmúlt tranzakciók</h3>
<Collapse Visible="@collapse1Visible">
    <CollapseHeader>
        <Heading Size="HeadingSize.Is5">
            <input @bind="searchService.atadasFilter.Kereses" @bind:event="oninput" @onfocusin="@(()=>collapse1Visible=true)" />
            <Button Color="Color.Primary" @onclick="SearchHely">
                Keresés
            </Button>
        </Heading>
    </CollapseHeader>
    <CollapseBody>
        
        <Text>Időbeli szűrés: </Text>

        <Row>
            <Column ColumnSize="ColumnSize.Is1">
                <Text>Mettől: </Text>
            </Column>
            <Column ColumnSize="ColumnSize.Is11">
                <DateEdit Placeholder="@(legregebbi)" @bind-Date="searchService.atadasFilter.Mettol"></DateEdit>
            </Column>
        </Row>

        <Row>
            <Column ColumnSize="ColumnSize.Is1">
                <Text>Meddig: </Text>
            </Column>
            <Column ColumnSize="ColumnSize.Is11">
                <DateEdit Placeholder="@(ma)" @bind-Date="searchService.atadasFilter.Meddig"></DateEdit>
            </Column>
        </Row>

        <Row>
            @if (!searchService.atadasFilter.CsakMa)
            {
                <Check TValue="bool" @bind-Checked="searchService.atadasFilter.MaIs">Csak azok legyenek benne akik tovább adták</Check>
            }
            else
            {
        <Check Disabled="true" TValue="bool" @bind-Checked="searchService.atadasFilter.MaIs">Csak azok legyenek benne akik tovább adták</Check>
            }
        </Row>

        <Row>
            @if (!searchService.atadasFilter.MaIs)
            {
                <Check TValue="bool" @bind-Checked="searchService.atadasFilter.CsakMa">Csak azok legyenek benne akik nem adták tovább</Check>
            }
            else
            {
                <Check Disabled="true" TValue="bool" @bind-Checked="searchService.atadasFilter.CsakMa">Csak azok legyenek benne akik nem adták tovább</Check>
            }
        </Row>

        <Row>
            <Column ColumnSize="ColumnSize.Is2">
                <Text>Mennyiségre keresés: </Text>
            </Column>
            <Column ColumnSize="ColumnSize.Is10">
                <NumericEdit @bind-Value="searchService.atadasFilter.Mennyiseg"></NumericEdit>
            </Column>
        </Row>

        <CloseButton Clicked="@(()=>collapse1Visible=false)" />

    </CollapseBody>
</Collapse>

<DataGrid TItem="Hely"
          Data="@lista"
          ReadData="@OnReadData"
          TotalItems="@count" ShowPager="true" PageSize="searchService.PageSize" Bordered="true" Hoverable="true" Striped="true"
          RowUpdated="@OnAfterUpdate">
    <DataGridCommandColumn TItem="Hely">
        <NewCommandTemplate>
            <Button hidden />
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Button hidden />
        </EditCommandTemplate>
        <DeleteCommandTemplate>
            <Button hidden />
        </DeleteCommandTemplate>
    </DataGridCommandColumn>

    <DataGridColumn TItem="Hely" Field="@nameof(Hely.EszkozID)" Caption="Micsoda" Editable="false">
        <DisplayTemplate>
            @((context as Hely )?.Eszkoz.Nev)
        </DisplayTemplate>
        <EditTemplate>
            <SelectList Data="@eszkozLista"
                        TextField="@((item)=>item.Nev)"
                        ValueField="@((item)=>item.ID)"
                        SelectedValue="@((int)( ( (CellEditContext)context ).CellValue ))"
                        SelectedValueChanged="@(( v ) => ( (CellEditContext)context ).CellValue = int.Parse((string)v))" />
        </EditTemplate>
    </DataGridColumn>

    <DataGridColumn TItem="Hely" Field="@nameof(Hely.EszkozHelyID)" Caption="Honnan/kitől kapta" Editable="false">
        <DisplayTemplate>
            @((context as Hely )?.EszkozHely.Nev)
        </DisplayTemplate>
        <EditTemplate>
            <SelectList Data="@eszkozHelyLista"
                        TextField="@((item)=>item.Nev)"
                        ValueField="@((item)=>item.ID)"
                        SelectedValue="@((int)( ( (CellEditContext)context ).CellValue ))"
                        SelectedValueChanged="@(( v ) => ( (CellEditContext)context ).CellValue = int.Parse((string)v))" />
        </EditTemplate>
    </DataGridColumn>


    <DataGridColumn TItem="Hely" Field="@nameof(Hely.HovaID)" Caption="Ki/Mi kapta" Editable="false">
        <DisplayTemplate>
            @((context as Hely)?.Hova.Nev)
        </DisplayTemplate>
        <EditTemplate>
            <SelectList Data="@eszkozHelyLista"
                        TextField="@((item)=>item.Nev)"
                        ValueField="@((item)=>item.ID)"
                        SelectedValue="@((int)( ( (CellEditContext)context ).CellValue ))"
                        SelectedValueChanged="@(( v ) => ( (CellEditContext)context ).CellValue = int.Parse((string)v))" />
        </EditTemplate>
    </DataGridColumn>

    <DataGridColumn TItem="Hely" Field="@nameof(Hely.HovaMennyiseg)" Caption="Mennyit" Editable="false" />

    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Mikortol)" Caption="Mikor kapta" Editable="false" />

    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Meddig)" Caption="Mikor adta tovább" Editable="false">
        <DisplayTemplate>
            @if ((context as Hely).Meddig == null)
            {
                @("Még mindig nála van")
            }
            else
            {
                @((context as Hely).Meddig)
            }
        </DisplayTemplate>
    </DataGridColumn>
</DataGrid>

@code {
    List<Hely> lista;
    List<EszkozHely> eszkozHelyLista;
    List<Eszkoz> eszkozLista;

    string ma = DateTime.Now.ToString();
    string legregebbi;
    bool collapse1Visible;
    bool firstRender;
    int count;


    private async Task SearchHely(MouseEventArgs e)
    {
        searchService.atadasFilter.Sorrend.Clear();

        if (searchService.atadasFilter.MaIs)
        {
            searchService.atadasFilter.CsakMa = false;
            Task.WaitAll();
        }
        else if (searchService.atadasFilter.CsakMa)
        {
            searchService.atadasFilter.MaIs = false;
            Task.WaitAll();
        }
        else
        {
            searchService.atadasFilter.CsakMa = false;
            searchService.atadasFilter.MaIs = false;
            Task.WaitAll();
        }

        var response = await repo.ListAtadasok(searchService.atadasFilter, searchService.PageSize, 1);
        Task.WaitAll();
        lista = response.Data;
        count = response.Total;
        StateHasChanged();
    }

    async Task OnReadData(DataGridReadDataEventArgs<Hely> e)
    {
        var request = new
        {
            Sort = e.Columns
                .Where(_ => _.Direction != SortDirection.None)
                .Select(_ => new { mezo = _.Field, order = _.Direction == SortDirection.Ascending ? "A" : "D" })  // *** Need a property to OrderBy here ***
        };

        searchService.atadasFilter.Sorrend = request.Sort.Select(c => new Tuple<string, string>(c.mezo, c.order)).ToList();

        var response = await repo.ListAtadasok(searchService.atadasFilter, searchService.PageSize, e.Page);
        eszkozHelyLista = await repo.GetXHovaAtadasokList();
        eszkozLista = await repo.GetXMitList();

        lista = response.Data;
        count = response.Total;

        Task.WaitAll();

        legregebbi = response.Data.Where(x => x.Meddig != null).OrderBy(x => x.Meddig).First().Mikortol.ToString();
        if (searchService.atadasFilter.Mettol == null)
        {
            searchService.atadasFilter.Mettol = response.Data.Where(x => x.Meddig != null).OrderBy(x => x.Meddig).First().Mikortol;
        }
        searchService.atadasFilter.RegiSorrend = searchService.atadasFilter.Sorrend;
        searchService.atadasFilter.Meddig = DateTime.Now;

        StateHasChanged();
    }

    async Task OnAfterUpdate(SavedRowItem<Hely, Dictionary<string, object>> e)
    {
        // todo validálni, meg menteni, ha hiba van, akkor e.cancel = true

        using (var ts = new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))
        {
            var mentettBeszerzes = await repo.HelyModositas(e.Item);
            ts.Complete();
        }

        // ez nemtom kell-e ide...
        // always call StateHasChanged!
        StateHasChanged();
    }
}
