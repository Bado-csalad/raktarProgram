@page "/"

@inject IHomeRespitory repo

<h3>Raktár</h3>
<Link To="atadas">
    Átadás
</Link>
<DataGrid TItem="Hely"
          Data="@lista"
          ReadData="@OnReadData"
          TotalItems="@count" ShowPager="true" PageSize="100" Editable="false">
    <DataGridColumn TItem="Hely" Field="@nameof(Hely.EszkozID)" Caption="Micsoda">
         <DisplayTemplate>
                @((context as Hely )?.Eszkoz.Nev)
        </DisplayTemplate>
        </DataGridColumn>
    <DataGridColumn TItem="Hely" Field="@nameof(Hely.EszkozHelyID)" Caption="Hol">
         <DisplayTemplate>
                @((context as Hely )?.EszkozHely.Nev)
        </DisplayTemplate>
        </DataGridColumn>

    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Mennyiseg)" Caption="Mennyit" />
    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Mikortol)" Caption="Mikoról" />
    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Meddig)" Caption="Meddig" />
    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Kodegyutt)" Caption="Kodegyutt" />
    <DataGridColumn TItem="Hely" Field="@nameof(Hely.Irany)" Caption="Irany" />
</DataGrid>

@code{
    List<Hely> lista;

    int count;

    async Task OnReadData(DataGridReadDataEventArgs<Hely> e)
        {
            var response = await repo.ListHome(null, 100, 1);

            lista = response.Data;
            count = response.Total;

            StateHasChanged();
        }
    
    void OnBeforeUpdate(CancellableRowChange<Eszkoz> e)
    {
        // todo validálni, meg menteni, ha hiba van, akkor e.cancel = true

        //var mentettEszkoz = await repo.EszkozModositas(e.Item);

        // ez nemtom kell-e ide...
        // always call StateHasChanged!
        StateHasChanged();
    }
}

          