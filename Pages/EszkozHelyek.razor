@page "/eszkozhelyek"

@using raktarProgram.Data
@using raktarProgram.Data.Filters
@using raktarProgram.Interfaces
@using Blazorise.DataGrid
@using System.Transactions

@inject IEszkozHelyRepository repo

<h3>EszközHelyek</h3>
<DataGrid TItem="EszkozHely"
          Data="@lista"
          ReadData="@OnReadData"
          TotalItems="@count" ShowPager="true" PageSize="5" Editable="true" RowUpdated="@OnAfterUpdate" RowUpdating="@OnBeforeUpdate">
    <DataGridCommandColumn TItem="EszkozHely" />
    <DataGridColumn TItem="EszkozHely" Field="@nameof(EszkozHely.Nev)" Caption="Név" Editable="true" />
    <DataGridColumn TItem="EszkozHely" Field="@nameof(EszkozHely.Leiras)" Caption="Leírás" Editable="true" />
    <DataGridColumn TItem="EszkozHely" Field="@nameof(EszkozHely.Telefon)" Caption="Azonosító" Editable="true" />
    <DataGridColumn TItem="EszkozHely" Field="@nameof(EszkozHely.Cim)" Caption="Cím" Editable="true" />   
    <DataGridColumn TItem="EszkozHely" Field="@nameof(EszkozHely.Email)" Caption="Email" Editable="true" />   
</DataGrid>

@code {
    List<EszkozHely> lista;

    int count;

    async Task OnReadData(DataGridReadDataEventArgs<EszkozHely> e)
        {
            var response = await repo.ListEszkozHely(null, e.PageSize, e.Page);

            lista = response.Data;
            count = response.Total;

            StateHasChanged();
        }

    async Task OnBeforeUpdate(CancellableRowChange<EszkozHely> e)
    {
        // todo validálni, meg menteni, ha hiba van, akkor e.cancel = true

        // ez nemtom kell-e ide...
        // always call StateHasChanged!
        StateHasChanged();
    }
    
    async Task OnAfterUpdate(SavedRowItem<EszkozHely, Dictionary<string, object>> e)
    {
        // todo validálni, meg menteni, ha hiba van, akkor e.cancel = true

        using (var ts = new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))
        {
            var mentettEszkozHely = await repo.EszkozHelyModositas(e.Item);
            ts.Complete();
        }

        // ez nemtom kell-e ide...
        // always call StateHasChanged!
        StateHasChanged();
    }
}